pipeline{
    agent any
    stages {
        // CI Stages
        stage('Clone') {
            steps {
                sh 'echo "Cloning The Repo"'
                git branch: 'main', url: 'https://github.com/ArushiKhatri/wordpress-school-hub.git'
            }
        }

        stage('Archive') {
            steps {
                sh '''
                    echo "Cleaning old ZIPs and meta files"
                    rm -f *.zip zipname.txt

                    echo "Archiving a zip file"
                    DATE=$(date +"%FT%H%M%S")
                    ZIP_NAME="wordpress-${DATE}.zip"

                    zip -r "$ZIP_NAME" . -x "*.zip" -x "*.git*" -x "zipname.txt" -x "latest.txt"

                    echo "$ZIP_NAME" > zipname.txt

                    # Preserve old latest.txt if exists
                    if [ -f latest.txt ]; then
                        mv latest.txt old_latest.txt
                    fi

                    # Create new latest.txt with current artifact as the first line
                    echo "$ZIP_NAME" > latest.txt

                    # Append previous entries (skip the description part)
                    if [ -f old_latest.txt ]; then
                        grep ".zip" old_latest.txt >> latest.txt
                    fi

                    echo "Creating latest.zip copy..."
                    cp "$ZIP_NAME" latest.zip
                '''
            }
        }

        stage('Upload') {
            steps {
                script {
                    sh '''
                        echo "Uploading to Azure Blob Storage"
                        ZIP_NAME=$(cat zipname.txt)

                        az storage blob upload \
                          --account-name projectjenkins \
                          --container-name wordpress-artifacts \
                          --name "$ZIP_NAME" \
                          --file "$ZIP_NAME" \
                          --account-key XKRMt1MPHZMwz50gWeXcip2LU0JeuABfQAfkLtmCczf+a1EKVG33yIZIYGMEVto2HjxmLj0hR4yk+AStGb0gQA==

                        az storage blob upload \
                          --account-name projectjenkins \
                          --container-name wordpress-artifacts \
                          --name "latest.zip" \
                          --file "latest.zip" \
                          --account-key XKRMt1MPHZMwz50gWeXcip2LU0JeuABfQAfkLtmCczf+a1EKVG33yIZIYGMEVto2HjxmLj0hR4yk+AStGb0gQA== \
                          --overwrite

                        az storage blob upload \
                          --account-name projectjenkins \
                          --container-name wordpress-artifacts \
                          --name "latest.txt" \
                          --file "latest.txt" \
                          --account-key XKRMt1MPHZMwz50gWeXcip2LU0JeuABfQAfkLtmCczf+a1EKVG33yIZIYGMEVto2HjxmLj0hR4yk+AStGb0gQA== \
                          --overwrite
                    '''
                }
            }
        }

      stage('Slack Notification CI') {
    steps {
        wrap([$class: 'BuildUser']) {
            sh '''
                ZIP_NAME=$(cat zipname.txt)
                BUILD_ID_VAL=$BUILD_ID
                TRIGGERED_BY=$BUILD_USER_ID

           curl -X POST -H 'Content-type: application/json' --data '{"text":"Hello, World!"}' https://hooks.slack.com/services/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


            '''
        }
    }
}


        // CD Stages
        stage('Download Artifacts from Azure') {
            steps {
                sh '''
                    echo "Downloading latest.zip and latest.txt from Azure..."
                    
                    az storage blob download \
                      --account-name projectjenkins \
                      --container-name wordpress-artifacts \
                      --name latest.zip \
                      --file "/tmp/latest.zip" \
                      --account-key XKRMt1MPHZMwz50gWeXcip2LU0JeuABfQAfkLtmCczf+a1EKVG33yIZIYGMEVto2HjxmLj0hR4yk+AStGb0gQA==

                    az storage blob download \
                      --account-name projectjenkins \
                      --container-name wordpress-artifacts \
                      --name latest.txt \
                      --file latest.txt \
                      --account-key XKRMt1MPHZMwz50gWeXcip2LU0JeuABfQAfkLtmCczf+a1EKVG33yIZIYGMEVto2HjxmLj0hR4yk+AStGb0gQA==

                    echo "latest.zip" > zipname.txt
                '''
            }
        }

        stage('Deploy to Web Server') {
            steps {
                script {
                    def artifactName = readFile('zipname.txt').trim()
                    echo "Deploying $artifactName"

                    sh """
                        sudo unzip -o "/tmp/$artifactName" -d /var/www/html/
                        sudo chown -R www-data:www-data /var/www/html/
                        sudo systemctl restart apache2
                    """
                }
            }
        }

        stage('Slack Notification CD') {
            steps {
                sh '''
                    ZIP_NAME=$(head -n 1 zipname.txt)

                
 
curl -X POST -H 'Content-type: application/json' --data '{"text":"Hello, World!"}' https://hooks.slack.com/services/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


                '''
            }
        }

        // Rollback Stages
        stage('Download latest.txt from Azure') {
            steps {
                sh '''
                    echo "Downloading latest.txt..."
                    az storage blob download \
                      --account-name projectjenkins \
                      --container-name wordpress-artifacts \
                      --name latest.txt \
                      --file latest.txt \
                      --account-key XKRMt1MPHZMwz50gWeXcip2LU0JeuABfQAfkLtmCczf+a1EKVG33yIZIYGMEVto2HjxmLj0hR4yk+AStGb0gQA==

                    echo "--- Contents of latest.txt ---"
                    cat latest.txt
                    echo "-----------------------------"
                '''
            }
        }

        stage('Rollback to Previous Artifact') {
            steps {
                script {
                    def lines = readFile('latest.txt').split('\n').findAll { it.endsWith('.zip') }

                    if (lines.size() < 2) {
                        echo "Only one version found. Rollback not possible."
                        return
                    }

                    def rollbackVersion = lines[1]
                    echo "Rolling back to previous version: ${rollbackVersion}"

                    sh """
                        az storage blob download \
                          --account-name projectjenkins \
                          --container-name wordpress-artifacts \
                          --name "$rollbackVersion" \
                          --file "/tmp/$rollbackVersion" \
                          --account-key XKRMt1MPHZMwz50gWeXcip2LU0JeuABfQAfkLtmCczf+a1EKVG33yIZIYGMEVto2HjxmLj0hR4yk+AStGb0gQA==

                        sudo unzip -o "/tmp/$rollbackVersion" -d /var/www/html/
                        sudo chown -R www-data:www-data /var/www/html/
                        sudo systemctl restart apache2
                    """
                }
            }
        }

        stage('Slack Notification Rollback') {
            steps {
                script {
                    def lines = readFile('latest.txt').split('\n').findAll { it.endsWith('.zip') }

                    if (lines.size() < 2) {
                        error("Rollback not possible: Less than 2 deployed versions found.")
                    }

                    def rollbackVersion = lines[1]

                    def slackMessage = """
                    {
                        "text": "Rollback completed to: ${rollbackVersion}"
                    }
                    """

                    writeFile file: 'slack-payload.json', text: slackMessage

                    sh '''
curl -X POST -H 'Content-type: application/json' --data '{"text":"Hello, World!"}' https://hooks.slack.com/services/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

              ''' 
}
            }
        }
    }
}

